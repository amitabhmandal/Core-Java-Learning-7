package learning.thread;

/*
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * Rule #1 : Priority Range
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * 
 * Priority ranges from 1 to 10 and not from 0 to 10. It is not zero based.
 * 
 * 
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * Rule #2 : Min/Max Priority
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * Min Priority : 1
 * Max Priority : 10
 * 
 * Every thread in Java has some priority. It maybe default priority generated by 
 * JVM or customized priority provided by programmer.
 * Thread.MIN_PRIORITY = 1
 * Thread.NORM_PRIORITY = 5
 * Thread.MAX_PRIORITY = 10
 * 
 * Thread scheduler will use thread priorities to allocate processor.
 * The thread which is having priority highest priority will get the chance first
 * 
 *  
 * If two threads having same priority then we cannot expect exact execution order.
 * It depends on thread scheduler. 
 * 
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * Rule #3 : Getting Priority/Setting Priority
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * 
 * public final int getPriority();
 * public final void setPriority(int); [Allowed range is from 1 to 10]
 * 
 * If outside this range then it will lead to IllegalArgumentException()
 * 
 * @@@@@@@@@@@@@@@@@@@@@@@@@@
 * Rule #3 : Default Priority
 * @@@@@@@@@@@@@@@@@@@@@@@@@@
 * 
 * Default Thread Priority of Main thread is 5. Hence for every thread the
 * created from the main thread it will be inherited. 
 * Thus all child threads of main thread the default priority will be 5.
 * 
 * Whatever priority parent thread has will, the same priority will be 
 * there for the child thread. Hence for any other thread not inherited from main 
 * method is not necessary will result with a thread priority of 5.
 * 
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * Rule #4: IllegalArgumentException
 * @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 * If we try to assign a thread any other priority other than 1 to 10 then it will result in run time
 * exception ie it will generate IllegalArgumentException
 * 
 * 
 * 
 * 
 * 
 */

public class ThreadPriorities {

    public static void main(String[] args) {
        
        System.out.println("Main Thread Priority : " + Thread.currentThread().getPriority());
        ThreadPriorityDemo threadPriorityDemo = new ThreadPriorityDemo();
        threadPriorityDemo.start();
        System.out.println("Child Thread Priority : " + threadPriorityDemo.getPriority());
        
        
         Thread.currentThread().setPriority(7);
         System.out.println("Main Thread Priority : " + Thread.currentThread().getPriority());
         
         ThreadPriorityDemo threadPriorityDemo1 = new ThreadPriorityDemo();
         System.out.println("Child Thread Priority : " + threadPriorityDemo1.getPriority());
         
         //setting the priority of the thread other than 1 to 10
         threadPriorityDemo1.setPriority(11);
          
    }

}

class ThreadPriorityDemo extends Thread {
    
    public void run() {
        System.out.println("Child thread executing");
    }
    
}
