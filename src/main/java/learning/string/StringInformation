Until Java 8, Strings were internally represented as an array of characters â€“ char[], 
ncoded in UTF-16, so that every character uses two bytes of memory.


With Java 9 a new representation is provided, called Compact Strings. 
This new format will choose the appropriate encoding 
between char[] and byte[] depending on the stored content.


Since the new String representation will use the UTF-16 encoding only when necessary, 
the amount of heap memory will be significantly lower, 
which in turn causes less Garbage Collector overhead on the JVM.


Problem with String:
For every change in the String object internally a new Object gets created.

If the content is never fixed and constantly changing then always recommended to go for some 
other Objects but not String based.

